version: '3.9'

services:
  client-db:
    image: postgres:17
    container_name: client-db
    environment:
      POSTGRES_USER: clientuser
      POSTGRES_PASSWORD: clientpass
      POSTGRES_DB: clientdb
    ports:
      - "5433:5432"
    volumes:
      - client_data:/var/lib/postgresql/data

  client-processing:
    build:
      context: .
      dockerfile: Dockerfile
      target: client-runtime
    container_name: client-processing
    depends_on:
      - client-db
    environment:
      SPRING_DATASOURCE_USERNAME: clientuser
      SPRING_DATASOURCE_PASSWORD: clientpass
      SPRING_DATASOURCE_URL: jdbc:postgresql://client-db:5432/clientdb
      SERVER_PORT: 8080
    ports:
      - "8081:8080"

  account-db:
    image: postgres:17
    container_name: account-db
    environment:
      POSTGRES_USER: accountuser
      POSTGRES_PASSWORD: accountpass
      POSTGRES_DB: accountdb
    ports:
      - "5434:5432"
    volumes:
      - account_data:/var/lib/postgresql/data

  account-processing:
    build:
      context: .
      dockerfile: Dockerfile
      target: account-runtime
    container_name: account-processing
    depends_on:
      - account-db
    environment:
      SPRING_DATASOURCE_USERNAME: accountuser
      SPRING_DATASOURCE_PASSWORD: accountpass
      SPRING_DATASOURCE_URL: jdbc:postgresql://account-db:5432/accountdb
      SERVER_PORT: 8080
    ports:
      - "8082:8080"

  credit-db:
    image: postgres:17
    container_name: credit-db
    environment:
      POSTGRES_USER: credituser
      POSTGRES_PASSWORD: creditpass
      POSTGRES_DB: creditdb
    ports:
      - "5435:5432"
    volumes:
      - credit_data:/var/lib/postgresql/data

  credit-processing:
    build:
      context: .
      dockerfile: Dockerfile
      target: credit-runtime
    container_name: credit-processing
    depends_on:
      - credit-db
    environment:
      SPRING_DATASOURCE_USERNAME: credituser
      SPRING_DATASOURCE_PASSWORD: creditpass
      SPRING_DATASOURCE_URL: jdbc:postgresql://credit-db:5432/creditdb
      SERVER_PORT: 8080
    ports:
      - "8083:8080"

volumes:
  client_data:
  account_data:
  credit_data:
